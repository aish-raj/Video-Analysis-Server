package com.testvideoanalysis.video;


import java.util.concurrent.ExecutionException;
import java.util.concurrent.Future;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Async;
import org.springframework.scheduling.annotation.AsyncResult;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

@RestController
public class VideoController {
	
	@Autowired
	private VideoService videoService;
	
	@Async
	@RequestMapping(value = "/upload", method = RequestMethod.POST)
	public String uploadFile(@RequestParam(value="video") MultipartFile file, @RequestParam(value="id") String videoId)
	throws InterruptedException, ExecutionException {
		if (file == null)
		{
			System.out.println("File is NULL\n");
			return ("NULL pointer exception");
		}
		
		Future<String> future = videoService.uploadFile(new Video(file.getOriginalFilename(), videoId), file);
		 
		while (true) {
			 if (future.isDone()) {
				 	System.out.println(future.get());
		            break;
			 }
		 }
		
		return "HI";
	}
	
	@Async
	@RequestMapping(value = "/upload", method = RequestMethod.GET)
	public String test()
	{
		return "HI";
	}
}
