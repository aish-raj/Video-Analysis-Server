package com.testvideoanalysis.video;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

@Service
public class VideoService {
	
	@Autowired
	Analyser analyser;
	private String path = "/home/neel/IITB/server/videos/";
	private String fileName;
	
	public void uploadFile(MultipartFile file, String videoId) {
		
		try {
		      InputStream is = file.getInputStream();
		      fileName = file.getOriginalFilename();
		      System.out.println("Uploading files.");
		      Files.copy(is, Paths.get(path + "video_" + videoId + ".mp4" ), StandardCopyOption.REPLACE_EXISTING);
		      //analyser.getTags("ignore-path");
	
		     /* String fetching = "/home/neel/videoquestion-analysis/videoAnalysis/src/main.py";
		      String[] commandToExecute = new String[]{"python3", "/c", fetching};
		      Process p = Runtime.getRuntime().exec(commandToExecute);
		      p.waitFor(); */
		      
		      String command = "cmd /c python <command to execute or script to run>";
		      Process p = Runtime.getRuntime().exec(command);
		      p.waitFor();
		      BufferedReader bri = new BufferedReader(new InputStreamReader(p.getInputStream()));
		      BufferedReader bre = new BufferedReader(new InputStreamReader(p.getErrorStream()));
		      String line;
		      while ((line = bri.readLine()) != null) {
		              System.out.println(line);
		            }
		            bri.close();
		            while ((line = bre.readLine()) != null) {
		              System.out.println(line);
		            }
		            bre.close();
		            p.waitFor();
		            System.out.println("Done.");

		      p.destroy();
		}
		
		catch (Exception ex) {
		      System.out.println("Error writing file to output stream.");
		      throw new RuntimeException("IOError writing file to output stream");
		}
	}
}
